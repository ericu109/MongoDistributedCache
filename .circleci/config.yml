version: 2
jobs:
  build:
    docker: 
      - image: microsoft/dotnet:2.1-sdk
        environment:
          DEBIAN_FRONTEND: "noninteractive"
    steps:
      - checkout

      - run:
          name: Install NodeJS and npm
          command: |
            apt-get update
            apt-get install -y nodejs
            apt-get install -y npm

      - run:
          name: Install semantic-release and supporting packages
          command: |
            npm install --global npx
            npm install --global semantic-release
            npm install --global @semantic-release/changlog
            npm install --global @semantic-release/git
            npm install --global @semantic-release/exec

      - run:
          name: Build and Test With Version
          command: |
            a=$(npx semantic-release --dry-run | grep -oP "^.+next release version is \K(.*)$")
            dotnet build -c Release /p:Version=$a src/MongoDistributedCache/MongoDistributedCache.csproj
            dotnet test src/MongoDistributedCache.Tests/MongoDistributedCache.Tests.csproj
            dotnet pack -c Release /p:Version=$a --include-source --include-symbols src/MongoDistributedCache/MongoDistributedCache.csproj

      - store_artifacts:
          path: src/MongoDistributedCache/bin/Release
          destination: artifacts

      - persist_to_workspace:
          root: src/MongoDistributedCache/bin/Release
          paths:
            - "*.nupkg"

  deployToNuget:
    docker:
      - image: microsoft/dotnet:2.1-sdk
        environment:
          DEBIAN_FRONTEND: "noninteractive"
    steps:
      - attach_workspace:
          at: artifacts

      - run:
          name: Install NodeJS
          command: apt-get install -y nodejs

      - run:
        name: Install npx and semantic-release
        command: |
          npm install --global npx
          npm install --global semantic-release
          npm install --global @semantic-release/changlog
          npm install --global @semantic-release/git
          npm install --global @semantic-release/exec

workflows:
  version: 2
  deployment-pipeline:
    jobs:
      - build
      - deployApproval:
          type: approval
          requires:
            - build
      - deployToNuget:
          requires:
            - build
            - deployApproval